buildscript {
    ext.your_name = 'Marek Soluch'
    ext.your_email = 'marek.soluchl@gmail.com'
    ext.your_github_name = 'mareksoluch'

    ext.project_name = 'json-extractor'
    ext.project_description = """Library to extract data from JSON"""
    ext.project_group = 'org.solo'
    ext.project_artifact = 'json-extractor'
    ext.project_version = '1.0.5'
    ext.project_license = 'The Apache Software License, Version 2.0' // the full license name
    ext.project_license_tag = 'Apache-2.0' // the license tag name
    ext.project_license_url = 'https://www.apache.org/licenses/LICENSE-2.0.txt' // link to the license

    repositories {
        mavenCentral()
        jcenter()
    }

    dependencies {
        classpath 'org.junit.platform:junit-platform-gradle-plugin:1.1.0'
    }
}


plugins {
    id 'java-library'
    id "com.jfrog.bintray" version "1.7"
    id "me.champeau.gradle.jmh" version "0.4.3"
    id 'maven-publish'
}

group = project_group
version = project_version

sourceCompatibility = 1.8
targetCompatibility = 1.8
compileJava.options.encoding = 'UTF-8'

repositories {
    mavenCentral()
    jcenter()
    mavenLocal()
}


dependencies {
    // This dependency is exported to consumers, that is to say found on their compile classpath.
    api 'org.apache.commons:commons-math3:3.6.1'

    // This dependency is used internally, and not exposed to consumers on their own compile classpath.
    implementation 'com.google.guava:guava:23.0'

    // Use JUnit test framework
    testImplementation 'junit:junit:4.12'

    compile 'com.fasterxml.jackson.jaxrs:jackson-jaxrs-json-provider:2.7.5'
    compile 'com.fasterxml.jackson.core:jackson-databind:2.7.5'
    testCompile 'org.assertj:assertj-core:3.6.2'
    testCompile 'junit:junit:4.12'

}

task sourcesJar(type: Jar, dependsOn: classes) {
    classifier = 'sources'
    from sourceSets.main.allSource
}

task javadocJar(type: Jar, dependsOn: javadoc) {
    classifier = 'javadoc'
    from javadoc.destinationDir
}

artifacts {
    archives javadocJar, sourcesJar
}

publishing {
    publications {
        maven(MavenPublication) {
            from components.java
            groupId project_group
            artifactId project_artifact
            version project_version
            artifact sourcesJar
            artifact javadocJar
            pom.withXml {
                asNode().children().last() + {
                    resolveStrategy = Closure.DELEGATE_FIRST
                    name project_name
                    description project_description
                    url "https:github.com/$your_github_name/$project_name"
                    scm {
                        url "https:github.com/$your_github_name/$project_name"
                        connection "scm:git:git:github.com/$your_github_name/${project_name}.git"
                        developerConnection "scm:git:ssh:git@github.com:$your_github_name/${project_name}.git"
                    }
                    licenses {
                        license {
                            name project_license
                            url project_license_url
                            distribution 'repo'
                        }
                    }
                    developers {
                        developer {
                            id your_github_name
                            name your_name
                            email your_email
                        }
                    }
                }
            }
        }
    }
}


bintray {
    user = System.getenv('BINTRAY_USER')
    key = System.getenv('BINTRAY_API_KEY')
    publications = ['maven']
    pkg {
        repo = 'maven'
        name = project_name
        desc = project_description
        licenses = [project_license_tag]
        publicDownloadNumbers = true
        websiteUrl = "https:github.com/$your_github_name/$project_name"
        issueTrackerUrl = "https:github.com/$your_github_name/$project_name/issues"
        vcsUrl = "https:github.com/$your_github_name/${project_name}.git"
        githubRepo = "$your_github_name/$project_name"
        version {
            name = project_version
            vcsTag = project_version
            gpg {
                sign = true
            }
        }
    }
}
